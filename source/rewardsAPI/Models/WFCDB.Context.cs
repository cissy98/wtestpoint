//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RewardsAPI.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
   
    public partial class WFCEntities : DbContext
    {
        public WFCEntities()
            : base(new System.Data.Entity.Core.EntityClient.EntityConnectionStringBuilder
            {
                Metadata = "res://*",
                Provider = "System.Data.SqlClient",
                ProviderConnectionString = new System.Data.SqlClient.SqlConnectionStringBuilder
                {
                   
                    DataSource= "tcp:kw6h0ae96q.database.windows.net,1433",
                    InitialCatalog = "GPURdb",
                    IntegratedSecurity = false,
                    UserID = "WfcAzureGU@kw6h0ae96q",
                    Password = "Qwasz!23",

                }.ConnectionString
            }.ConnectionString)
        {
            //6/28/2017 
            ((IObjectContextAdapter)this).ObjectContext.CommandTimeout = 300;
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual ObjectResult<sp_wfcapi_chkUsersDEP_Result> sp_wfcapi_chkUsersDEP(string k1, string k2, Nullable<int> ind, Nullable<int> eday, string uid, string hdval, string pass64base, string projname)
        {
            var k1Parameter = k1 != null ?
                new ObjectParameter("k1", k1) :
                new ObjectParameter("k1", typeof(string));
    
            var k2Parameter = k2 != null ?
                new ObjectParameter("k2", k2) :
                new ObjectParameter("k2", typeof(string));
    
            var indParameter = ind.HasValue ?
                new ObjectParameter("ind", ind) :
                new ObjectParameter("ind", typeof(int));
    
            var edayParameter = eday.HasValue ?
                new ObjectParameter("eday", eday) :
                new ObjectParameter("eday", typeof(int));
    
            var uidParameter = uid != null ?
                new ObjectParameter("uid", uid) :
                new ObjectParameter("uid", typeof(string));
    
            var hdvalParameter = hdval != null ?
                new ObjectParameter("hdval", hdval) :
                new ObjectParameter("hdval", typeof(string));
    
            var pass64baseParameter = pass64base != null ?
                new ObjectParameter("pass64base", pass64base) :
                new ObjectParameter("pass64base", typeof(string));
    
            var projnameParameter = projname != null ?
                new ObjectParameter("projname", projname) :
                new ObjectParameter("projname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_wfcapi_chkUsersDEP_Result>("sp_wfcapi_chkUsersDEP", k1Parameter, k2Parameter, indParameter, edayParameter, uidParameter, hdvalParameter, pass64baseParameter, projnameParameter);
        }
    
        public virtual ObjectResult<sp_wfc_getPointInfo_Result> sp_wfc_getPointInfo(Nullable<int> ind, string code)
        {
            var indParameter = ind.HasValue ?
                new ObjectParameter("ind", ind) :
                new ObjectParameter("ind", typeof(int));
    
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_wfc_getPointInfo_Result>("sp_wfc_getPointInfo", indParameter, codeParameter);
        }
    }
}
